apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'docker'
apply plugin: 'io.spring.dependency-management'


buildscript {
    project.ext {
        springBootVersion = '2.3.0.RELEASE'
        starterMailVersion = '2.2.1.RELEASE'
        jarName = 'authentication'
        gradleDockerVersion = '1.2'
        swagger2version = '2.9.2'
        sonarqubeversion = '2.5'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}"
        classpath "se.transmode.gradle:gradle-docker:${project.gradleDockerVersion}"
     }
}


task createWrapper(type: Wrapper) {
    gradleVersion = '6.5'
}

group = 'com.waqas.akram'
mainClassName = 'com.example.spring.Application'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:2.3.0.RELEASE"
    }
}


dependencies {

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '2.3.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-dependencies'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web-services'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
 
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
 
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: '2.0.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-core'

    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.3.Final'
    compile group: 'org.springframework.boot', name: 'spring-boot-test-autoconfigure', version: '1.4.0.RELEASE'
    testCompile group: 'org.springframework', name: 'spring-test', version: '5.1.8.RELEASE'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'

    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'

    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
 

    compile group: 'joda-time', name: 'joda-time', version: '2.10.6'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.14'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

}


task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
        copy {
            from "${project.buildDir}/resources/main/run.sh"
            into stageDir
        }
    }
}

run {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4200,suspend=n', '-Dspring.profiles.active=default']
}